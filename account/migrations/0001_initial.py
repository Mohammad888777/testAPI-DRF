# Generated by Django 5.0.1 on 2024-02-01 13:02

import account.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='id', primary_key=True, serialize=False, unique=True, verbose_name='user id')),
                ('username', models.CharField(blank=True, db_index=True, help_text='user username', max_length=40, null=True, validators=[account.models.validate_username], verbose_name='user username')),
                ('email', models.EmailField(blank=True, db_index=True, help_text='enter email', max_length=100, null=True, verbose_name='enter email')),
                ('phone', models.CharField(db_index=True, help_text='enter phone', max_length=11, unique=True, validators=[account.models.validate_phone], verbose_name='enter phone')),
                ('first_name', models.CharField(blank=True, db_index=True, help_text='enter first name', max_length=40, null=True, verbose_name='enter first name')),
                ('last_name', models.CharField(blank=True, db_index=True, help_text='enter last name', max_length=40, null=True, verbose_name='enter last name')),
                ('user_ip', models.GenericIPAddressField(blank=True, db_index=True, help_text='user ip', null=True, verbose_name='user ip')),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_index=True, help_text='time joined', verbose_name='time joined')),
                ('is_active', models.BooleanField(db_index=True, default=False, help_text='user is active', verbose_name='user is active')),
                ('is_admin', models.BooleanField(db_index=True, default=False, help_text='user is admin', verbose_name='user is admin')),
                ('is_staff', models.BooleanField(db_index=True, default=False, help_text='user is staff', verbose_name='user is staff')),
                ('is_superuser', models.BooleanField(db_index=True, default=False, help_text='user is superuser', verbose_name='user is superuser')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='time joined', verbose_name='time joined')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, help_text='time updated', verbose_name='time updated')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'user',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BlockUser',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='id', primary_key=True, serialize=False, unique=True, verbose_name='user id')),
                ('user_ip', models.GenericIPAddressField(blank=True, db_index=True, help_text='user ip', null=True, verbose_name='user ip')),
                ('blocked_forever', models.BooleanField(db_index=True, default=False, help_text='is blocked for ever', verbose_name='is blocked for ever')),
                ('blocked_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='time joined', verbose_name='time joined')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, help_text='time updated', verbose_name='time updated')),
                ('user', models.OneToOneField(blank=True, help_text='user', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='OtpCode',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='id', primary_key=True, serialize=False, unique=True, verbose_name='user id')),
                ('otp', models.CharField(db_index=True, help_text='otp', max_length=6, verbose_name='otp')),
                ('expire', models.DateTimeField(blank=True, db_index=True, help_text='expire time', null=True, verbose_name='expire time')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='time joined', verbose_name='time joined')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, help_text='time updated', verbose_name='time updated')),
                ('user', models.OneToOneField(help_text='user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
    ]
